package {{.Name}}

import (
    "database/sql"

	"github.com/alexyslozada/config-go"
	log "github.com/alexyslozada/logger-go"
)

const (
	Postgresql = "postgres"
	MySql      = "mysql"
	SqlServer  = "sqlserver"
	Oracle     = "oracle"
)

type Storage interface {
	Create(m *Model) error
	Update(ID uint, m *Model) error
	Delete(ID uint) error
	GetByID(ID uint) (*Model, error)
	GetAll() (Models, error)
}

func newStorage(c *config.Configuration, db *sql.DB, l *log.Model) Storage {
	var s Storage
	dbe, err := c.Get("db_engine")
	if err != nil {
	    l.Error.Fatalf("error al leer el campo db_engine del archivo de configuración json: %v", err)
	}
	switch dbe {
	case Postgresql:
		s = &Psql{db}
	default:
		l.Error.Fatalf("el motor de base de datos %s no está implementado.", dbe)
	}

	return s
}

